{"remainingRequest":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/views/CreateEvent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/views/CreateEvent.vue","mtime":1565819302405},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FormFormat from \"@/components/Formatting/FormFormat.vue\";\nimport WhiskeyBrandsToSelect from \"@/components/Whiskey/WhiskeyBrandsToSelect.vue\";\nimport auth from \"../auth\";\n\nexport default {\n  components: {\n    FormFormat,\n    WhiskeyBrandsToSelect\n  },\n\n  data() {\n    return {\n      selectedWhiskeyBrands: [],\n      apiURLEvent: \"http://localhost:8080/AuthenticationApplication/api/events\",\n      API_URL: \"http://localhost:8080/AuthenticationApplication/api/whiskeys\",\n      eventData: {\n        title: \"\",\n        // eventImageURL: \"\",\n        isPrivate: true,\n        date: new Date(),\n        time: \"\",\n        location: \"\",\n        eventDescription: \"\",\n        isBlindTasting: true,\n        tastingWhiskeys: []\n      },\n      whiskey: {\n        brand: \"\"\n      }\n    };\n  },\n  methods: {\n    saveEvent() {\n      this.selectedWhiskeyBrands.forEach(item => {\n        this.whiskey.brand = item;\n        this.tastingWhiskeys.push(this.whiskey);\n      });\n      fetch(this.apiURLEvent, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.getToken()\n        },\n        body: JSON.stringify(this.eventData)\n      })\n        .then(response => {\n          if (response.ok) {\n            let eventId = this.eventData.eventId;\n            this.$router.push({ name: \"eventPage\", params: { eventId } });\n          }\n        })\n        .catch(err => console.error(err));\n    }\n  }\n};\n",{"version":3,"sources":["CreateEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateEvent.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"create-event\">\n    <form-format class=\"event-background\">\n      <h1>Create a New Event</h1>\n\n      <h4>Title:</h4>\n      <br>\n      <input type=\"text\" v-model=\"eventData.title\" placeholder=\"Event Title\">\n      <br>\n\n      <h4>\n        Is this a private event?\n        <input type=\"checkbox\" v-model=\"eventData.isPrivate\">\n        {{eventData.isPrivate ? \"yes\" : \"no\"}}\n      </h4>\n\n      <br>\n      <h4>Date of Event:</h4>\n      <br>\n      <input type=\"date\" v-model=\"eventData.date\">\n      <br>\n\n      <h4>Time of Event:</h4>\n      <br>\n      <input type=\"text\" v-model=\"eventData.time\" placeholder=\"HH:mm am/pm\">\n      <br>\n\n      <h4>Location:</h4>\n      <br>\n      <input type=\"text\" v-model=\"eventData.location\" placeholder=\"Address\">\n      <br>\n\n      <h4>Additional Information:</h4>\n      <br>\n      <textarea v-model=\"eventData.eventDescription\" placeholder=\"Other Info\"></textarea>\n      <br>\n\n      <h4>\n        Is this a blind tasting?\n        <input type=\"checkbox\" v-model=\"eventData.isBlindTasting\">\n        {{eventData.isBlindTasting ? \"yes\" : \"no\"}}\n      </h4>\n      <br>\n      <h4>What whiskeys will be tasted?</h4>\n      <br>\n      <h4>\n        <whiskey-brands-to-select :apiURL=\"API_URL\" v-model=\"selectedWhiskeyBrands\"></whiskey-brands-to-select>\n      </h4>\n      <br>\n      <h4>\n        <button type=\"submit\" v-on:click.prevent=\"saveEvent\">Create Event</button>\n      </h4>\n    </form-format>\n  </div>\n</template>\n\n<script>\nimport FormFormat from \"@/components/Formatting/FormFormat.vue\";\nimport WhiskeyBrandsToSelect from \"@/components/Whiskey/WhiskeyBrandsToSelect.vue\";\nimport auth from \"../auth\";\n\nexport default {\n  components: {\n    FormFormat,\n    WhiskeyBrandsToSelect\n  },\n\n  data() {\n    return {\n      selectedWhiskeyBrands: [],\n      apiURLEvent: \"http://localhost:8080/AuthenticationApplication/api/events\",\n      API_URL: \"http://localhost:8080/AuthenticationApplication/api/whiskeys\",\n      eventData: {\n        title: \"\",\n        // eventImageURL: \"\",\n        isPrivate: true,\n        date: new Date(),\n        time: \"\",\n        location: \"\",\n        eventDescription: \"\",\n        isBlindTasting: true,\n        tastingWhiskeys: []\n      },\n      whiskey: {\n        brand: \"\"\n      }\n    };\n  },\n  methods: {\n    saveEvent() {\n      this.selectedWhiskeyBrands.forEach(item => {\n        this.whiskey.brand = item;\n        this.tastingWhiskeys.push(this.whiskey);\n      });\n      fetch(this.apiURLEvent, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.getToken()\n        },\n        body: JSON.stringify(this.eventData)\n      })\n        .then(response => {\n          if (response.ok) {\n            let eventId = this.eventData.eventId;\n            this.$router.push({ name: \"eventPage\", params: { eventId } });\n          }\n        })\n        .catch(err => console.error(err));\n    }\n  }\n};\n</script>\n\n<style>\n.create {\n  text-align: center;\n  align-items: center;\n  align-self: center;\n}\n\n.event-background {\n  margin-top: 20px;\n  background: black;\n  margin: 0px;\n  border: 3px solid #f1f1f1;\n  width: 50%;\n  align-content: center;\n  text-align: center;\n}\n\n#create-event {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n/* Full-width inputs */\n.event-background > input[type=\"text\"],\ntextarea,\ninput {\n  width: 95%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\n/* Set a style for all buttons */\nbutton {\n  background-color: #2e4d58;\n  color: white;\n  padding: 14px 20px;\n  margin: 8px 0;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n}\n\n/* Add a hover effect for buttons */\nbutton:hover {\n  opacity: 0.8;\n}\nh4 {\n  color: white;\n  text-align: center;\n  justify-content: center;\n}\n</style>\n\n\n\n\n"]}]}