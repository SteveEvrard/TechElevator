{"remainingRequest":"/Users/ztrembly/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ztrembly/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/components/Whiskey/WhiskeyRatingList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/ztrembly/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/components/Whiskey/WhiskeyRatingList.vue","mtime":1565639769563},{"path":"/Users/ztrembly/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ztrembly/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ztrembly/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ztrembly/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ztrembly/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.event-list {\n  display: flex;\n  justify-content: space-around;\n  align-content: flex-start;\n  margin: 15px 0px 15px 0px;\n  flex-wrap: wrap;\n}\nli {\n  list-style: none;\n}\n",{"version":3,"sources":["WhiskeyRatingList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WhiskeyRatingList.vue","sourceRoot":"src/components/Whiskey","sourcesContent":["<template>\n  <div class=\"whiskey-list\">\n    <div v-for=\"whiskeyR in whiskeyRatingList\" v-bind:key=\"whiskeyR\">\n      <single-whiskey-rating v-bind:whiskey=\"whiskeyR\"></single-whiskey-rating>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SingleEvent from \"@/components/Events/SingleEvent.vue\";\nimport CheckIn from \"@/components/CheckIn.vue\";\nimport TileFormat from \"@/components/Formatting/TileFormat.vue\";\nimport SingleWhiskeyRating from \"@/components/Whiskey/SingleWhiskeyRating.vue\";\n\nexport default {\n  components: {\n    SingleEvent,\n    CheckIn,\n    TileFormat,\n    SingleWhiskeyRating\n  },\n  name: \"WhiskeyRatingList\",\n  props: {\n    eventId: Number,\n    apiURLWhiskey: String,\n    whiskeyRatingList: Array,\n    whiskeyRating: {\n      whiskeyId: Number,\n      userId: Number,\n      eventId: Number,\n      tasteRating: Number,\n      smellRating: Number,\n      colorRating: Number,\n      bodyRating: Number,\n      finishRating: Number,\n      priceRating: Number,\n      overallRating: Number\n    },\n    event: {\n      title: String,\n      imgUrl: String,\n      date: new Date(),\n      time: String,\n      location: String,\n      eventDescription: \"\",\n      isBlindTasting: true,\n      eventId: Number\n    },\n    data() {\n      return {\n        numOfWhiskeys: \"\",\n        numOfReviewers: \"\",\n        whiskeyList: [],\n        whiskeyRatingList: [],\n        whiskeyBrandList: [],\n        whiskeyReviewerList: [],\n        whiskeyApiURL:\n          \"http://localhost:8080/AuthenticationApplication/api/event/\",\n        eventId: null,\n        tasteRatingPercentage: \"\",\n        smellRatingPercentage: \"\",\n        colorRatingPercentage: \"\",\n        bodyRatingPercentage: \"\",\n        finishRatingPercentage: \"\",\n        priceRatingPercentage: \"\",\n        overallRatingPercentage: \"\",\n        sumTasteRating: \"\",\n        sumSmellRating: \"\",\n        sumColorRating: \"\",\n        sumBodyRating: \"\",\n        sumFinishRating: \"\",\n        sumPriceRating: \"\",\n        sumOverallRating: \"\",\n        aveWhiskeyRating: {\n          aveTasteRating: \"\",\n          aveSmellRating: \"\",\n          aveColorRating: \"\",\n          aveBodyRating: \"\",\n          aveFinishRating: \"\",\n          avePriceRating: \"\",\n          aveOverallRating: \"\"\n        }\n      };\n    },\n    created() {\n      this.eventId = this.$route.params.eventId;\n      this.listWhiskeyRatings();\n    },\n    methods: {\n      listWhiskeyRatings() {\n        fetch(this.apiURLWhiskey + this.eventId + \"/whiskeyRating\")\n          .then(response => {\n            console.log(response);\n            return response.json();\n          })\n          .then(jsonList => {\n            this.whiskeyRatingList = jsonList;\n            this.doAllCalculations();\n          })\n          .catch(err => console.error(err));\n      },\n      getExistingWhiskeys() {\n        fetch(this.apiURL)\n          .then(response => {\n            return response.json();\n          })\n          .then(jsonWhiskeys => {\n            this.whiskeyList = jsonWhiskeys;\n          })\n          .catch(err => console.error(err));\n      },\n      countWhiskey(whiskeyRating) {\n        if (!whiskeyBrandList.contains(whiskeyRating.whiskeyId)) {\n          this.numOfWhiskeys += 1;\n          whiskeyBrandList.push(whiskeyRating.whiskeyId);\n        }\n      },\n      countReviews(whiskeyRating) {\n        if (!whiskeyReviewerList.contains(whiskeyRating.userId)) {\n          this.numOfReviewers += 1;\n          whiskeyReviewerList.push(whiskeyRating.userId);\n        }\n      },\n      getAveragesOfAllRatings() {\n        this.aveTasteRating = this.sumTasteRating / this.numOfWhiskeys;\n        this.aveSmellRating = this.sumSmellRating / this.numOfWhiskeys;\n        this.aveColorRating = this.sumColorRating / this.numOfWhiskeys;\n        this.aveBodyRating = this.sumBodyRating / this.numOfWhiskeys;\n        this.aveFinishRating = this.sumFinishRating / this.numOfWhiskeys;\n        this.avePriceRating = this.sumPriceRating / this.numOfWhiskeys;\n        this.aveOverallRating = this.sumOverallRating / this.numOfWhiskeys;\n      },\n      getPercentagesOfAllRatings() {\n        this.tasteRatingPercentage = this.aveTasteRating / 5;\n        this.smellRatingPercentage = this.aveSmellRating / 5;\n        this.colorRatingPercentage = this.aveColorRating / 5;\n        this.bodyRatingPercentage = this.aveBodyRating / 5;\n        this.finishRatingPercentage = this.aveFinishRating / 5;\n        this.priceRatingPercentage = this.avePriceRating / 5;\n        this.overallRatingPercentage = this.aveOverallRating / 5;\n      },\n      getCountsForAverages(whiskeyRating) {\n        addTasteRating(whiskeyRating.tasteRating);\n        addSmellRating(whiskeyRating.smellRating);\n        addColorRating(whiskeyRating.colorRating);\n        addBodyRating(whiskeyRating.bodyRating);\n        addFinishRating(whiskeyRating.finishRating);\n        addPriceRating(whiskeyRating.priceRating);\n        addOverallRating(whiskeyRating.overallRating);\n      },\n      doAllCalculations() {\n        this.whiskeyRatingList.forEach(whiskeyRating => {\n          this.countWhiskey(whiskeyRating);\n          this.getCountsForAverages(whiskeyRating);\n          this.getAveragesOfAllRatings();\n          this.getPercentagesOfAllRatings();\n        });\n      },\n\n      addTasteRating(tasteRating) {\n        this.sumTasteRating += tasteRating;\n      },\n      addSmellRating(smellRating) {\n        this.sumSmellRating += smellRating;\n      },\n      addColorRating(colorRating) {\n        this.sumColorRating += colorRating;\n      },\n      addBodyRating(bodyRating) {\n        this.sumBodyRating += bodyRating;\n      },\n      addFinishRating(finishRating) {\n        this.sumFinishRating += finishRating;\n      },\n      addPriceRating(priceRating) {\n        this.sumPriceRating += priceRating;\n      },\n      addOverallRating(overallRating) {\n        this.sumOverallRating += overallRating;\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.event-list {\n  display: flex;\n  justify-content: space-around;\n  align-content: flex-start;\n  margin: 15px 0px 15px 0px;\n  flex-wrap: wrap;\n}\nli {\n  list-style: none;\n}\n</style>"]}]}