{"remainingRequest":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/views/Register.vue?vue&type=template&id=63ae9146&","dependencies":[{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/views/Register.vue","mtime":1565874561511},{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"div\",\n        { staticClass: \"nav\" },\n        [\n          _c(\n            \"router-link\",\n            { staticClass: \"nav-link\", attrs: { to: { name: \"home\" } } },\n            [_vm._v(\"Home\")]\n          ),\n          _c(\n            \"router-link\",\n            { staticClass: \"nav-link\", attrs: { to: { name: \"login\" } } },\n            [_vm._v(\"Login\")]\n          ),\n          _c(\n            \"router-link\",\n            { staticClass: \"nav-link\", attrs: { to: { name: \"register\" } } },\n            [_vm._v(\"Register\")]\n          )\n        ],\n        1\n      ),\n      _c(\"form-format\", [\n        _c(\"div\", { staticClass: \"text-center\", attrs: { id: \"register\" } }, [\n          _c(\n            \"form\",\n            {\n              staticClass: \"form-register\",\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.register($event)\n                }\n              }\n            },\n            [\n              _c(\"h1\", { staticClass: \"h3 mb-3 font-weight-normal\" }, [\n                _vm._v(\"Create Account\")\n              ]),\n              _vm.registrationErrors\n                ? _c(\n                    \"div\",\n                    {\n                      staticClass: \"alert alert-danger\",\n                      attrs: { role: \"alert\" }\n                    },\n                    [_vm._v(\"There were problems registering this user.\")]\n                  )\n                : _vm._e(),\n              _c(\n                \"label\",\n                { staticClass: \"sr-only\", attrs: { for: \"username\" } },\n                [_vm._v(\"Email\")]\n              ),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.user.username,\n                    expression: \"user.username\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  id: \"username\",\n                  placeholder: \"Email\",\n                  required: \"\",\n                  autofocus: \"\"\n                },\n                domProps: { value: _vm.user.username },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.user, \"username\", $event.target.value)\n                  }\n                }\n              }),\n              _c(\n                \"label\",\n                { staticClass: \"sr-only\", attrs: { for: \"password\" } },\n                [_vm._v(\"Password\")]\n              ),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.user.password,\n                    expression: \"user.password\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"password\",\n                  id: \"password\",\n                  placeholder: \"Password\",\n                  required: \"\"\n                },\n                domProps: { value: _vm.user.password },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.user, \"password\", $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.user.confirmPassword,\n                    expression: \"user.confirmPassword\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"password\",\n                  id: \"confirmPassword\",\n                  placeholder: \"Confirm Password\",\n                  required: \"\"\n                },\n                domProps: { value: _vm.user.confirmPassword },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.user, \"confirmPassword\", $event.target.value)\n                  }\n                }\n              }),\n              _c(\"label\", { staticClass: \"sr-only\", attrs: { for: \"name\" } }, [\n                _vm._v(\"Full Name\")\n              ]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.user.userDetail.fullname,\n                    expression: \"user.userDetail.fullname\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  id: \"name\",\n                  placeholder: \"Your Full Name\",\n                  required: \"\"\n                },\n                domProps: { value: _vm.user.userDetail.fullname },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.user.userDetail,\n                      \"fullname\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _c(\"label\", { staticClass: \"sr-only\", attrs: { for: \"phone\" } }, [\n                _vm._v(\"Phone Number\")\n              ]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.user.userDetail.phoneNumber,\n                    expression: \"user.userDetail.phoneNumber\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  id: \"phone\",\n                  placeholder: \"XXX-XXX-XXXX\"\n                },\n                domProps: { value: _vm.user.userDetail.phoneNumber },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.user.userDetail,\n                      \"phoneNumber\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _c(\"label\", { staticClass: \"sr-only\", attrs: { for: \"city\" } }, [\n                _vm._v(\"City of Residence\")\n              ]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.user.userDetail.cityOfResidence,\n                    expression: \"user.userDetail.cityOfResidence\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: { type: \"text\", id: \"city\", placeholder: \"Your city\" },\n                domProps: { value: _vm.user.userDetail.cityOfResidence },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.user.userDetail,\n                      \"cityOfResidence\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _c(\n                \"label\",\n                { staticClass: \"sr-only\", attrs: { for: \"favbrands\" } },\n                [_vm._v(\"What are your favorite whiskey brands?\")]\n              ),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.user.userDetail.favBrandsOfWhiskeys,\n                    expression: \"user.userDetail.favBrandsOfWhiskeys\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  id: \"favbrands\",\n                  placeholder: \"Yes\",\n                  required: \"\"\n                },\n                domProps: { value: _vm.user.userDetail.favBrandsOfWhiskeys },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.user.userDetail,\n                      \"favBrandsOfWhiskeys\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _c(\n                \"label\",\n                { staticClass: \"sr-only\", attrs: { for: \"favwhiskey\" } },\n                [_vm._v(\"What type(s) of whiskey do you like best?\")]\n              ),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.user.userDetail.favTypesOfWhiskeys,\n                    expression: \"user.userDetail.favTypesOfWhiskeys\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  id: \"favwhiskey\",\n                  placeholder: \"Rye, Scotch, Bourbon, etc.\",\n                  required: \"\"\n                },\n                domProps: { value: _vm.user.userDetail.favTypesOfWhiskeys },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.user.userDetail,\n                      \"favTypesOfWhiskeys\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-lg btn-primary btn-block\",\n                  attrs: { id: \"thisbtn\", type: \"submit\" }\n                },\n                [_vm._v(\"Create Account\")]\n              ),\n              _c(\"router-link\", { attrs: { to: { name: \"login\" } } }, [\n                _c(\"button\", { attrs: { id: \"thisbtn\" } }, [\n                  _vm._v(\"Have an account?\")\n                ])\n              ])\n            ],\n            1\n          )\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}