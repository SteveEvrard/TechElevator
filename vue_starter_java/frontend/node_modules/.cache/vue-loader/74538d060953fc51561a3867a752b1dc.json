{"remainingRequest":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/components/EventsDisplay.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/components/EventsDisplay.vue","mtime":1565113966425},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: \"EventsDisplay\",\n  props: {\n    apiURL: String,\n    reviewID: Number\n  },\n  methods: {\n    backToReviews() {\n      this.$emit(\"showEvents\");\n    },\n    createEvents() {\n      fetch(this.apiURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.event)\n      })\n        .then(response => {\n          if (response.ok) {\n            this.$emit(\"showEvents\");\n          }\n        })\n        .catch(err => console.error(err));\n    }\n  }\n};\n",{"version":3,"sources":["EventsDisplay.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EventsDisplay.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"event-display\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"EventsDisplay\",\n  props: {\n    apiURL: String,\n    reviewID: Number\n  },\n  methods: {\n    backToReviews() {\n      this.$emit(\"showEvents\");\n    },\n    createEvents() {\n      fetch(this.apiURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.event)\n      })\n        .then(response => {\n          if (response.ok) {\n            this.$emit(\"showEvents\");\n          }\n        })\n        .catch(err => console.error(err));\n    }\n  }\n};\n</script>"]}]}