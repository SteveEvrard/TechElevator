{"remainingRequest":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/babel-loader/lib/index.js!/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/router.js","dependencies":[{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/router.js","mtime":1565186746537},{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport auth from \"./auth\";\nimport Home from \"./views/Home.vue\";\nimport Login from \"./views/Login.vue\";\nimport Register from \"./views/Register.vue\";\nimport CreateEvent from \"./views/CreateEvent.vue\";\nVue.use(Router);\n/**\n * The Vue Router is used to \"direct\" the browser to render a specific view component\n * inside of App.vue depending on the URL.\n *\n * It also is used to detect whether or not a route requires the user to have first authenticated.\n * If the user has not yet authenticated (and needs to) they are redirected to /login\n * If they have (or don't need to) they're allowed to go about their way.\n */\n\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/login\",\n    name: \"login\",\n    component: Login,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/register\",\n    name: \"register\",\n    component: Register,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/createEvent\",\n    name: \"createEvent\",\n    component: CreateEvent,\n    meta: {\n      requiresAuth: false\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  // Determine if the route requires Authentication\n  var requiresAuth = to.matched.some(function (x) {\n    return x.meta.requiresAuth;\n  });\n  var user = auth.getUser(); // If it does and they are not logged in, send the user to \"/login\"\n\n  if (requiresAuth && !user) {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["/Users/ecardenas/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/router.js"],"names":["Vue","Router","auth","Home","Login","Register","CreateEvent","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","x","user","getUser"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP;AAEAN,GAAG,CAACO,GAAJ,CAAQN,MAAR;AAEA;;;;;;;;;AASA,IAAMO,MAAM,GAAG,IAAIP,MAAJ,CAAW;AACxBQ,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFM;AAGxBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEd,IAHb;AAIEe,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GADM,EASN;AACEJ,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,SAAS,EAAEb,KAHb;AAIEc,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GATM,EAiBN;AACEJ,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAEZ,QAHb;AAIEa,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GAjBM,EAyBN;AACEJ,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,SAAS,EAAEX,WAHb;AAIEY,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GAzBM;AAHgB,CAAX,CAAf;AAuCAX,MAAM,CAACY,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC;AACA,MAAMJ,YAAY,GAAGE,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACR,IAAF,CAAOC,YAAX;AAAA,GAAjB,CAArB;AACA,MAAMQ,IAAI,GAAGzB,IAAI,CAAC0B,OAAL,EAAb,CAHoC,CAKpC;;AACA,MAAIT,YAAY,IAAI,CAACQ,IAArB,EAA2B;AACzBJ,IAAAA,IAAI,CAAC,QAAD,CAAJ;AACD,GAFD,MAEO;AACL;AACAA,IAAAA,IAAI;AACL;AACF,CAZD;AAcA,eAAef,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport auth from './auth'\nimport Home from './views/Home.vue'\nimport Login from './views/Login.vue'\nimport Register from './views/Register.vue'\nimport CreateEvent from './views/CreateEvent.vue'\n\nVue.use(Router)\n\n/**\n * The Vue Router is used to \"direct\" the browser to render a specific view component\n * inside of App.vue depending on the URL.\n *\n * It also is used to detect whether or not a route requires the user to have first authenticated.\n * If the user has not yet authenticated (and needs to) they are redirected to /login\n * If they have (or don't need to) they're allowed to go about their way.\n */\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/login\",\n      name: \"login\",\n      component: Login,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/register\",\n      name: \"register\",\n      component: Register,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/createEvent\",\n      name: \"createEvent\",\n      component: CreateEvent,\n      meta: {\n        requiresAuth: false\n      }\n    }\n  ]\n})\n\nrouter.beforeEach((to, from, next) => {\n  // Determine if the route requires Authentication\n  const requiresAuth = to.matched.some(x => x.meta.requiresAuth);\n  const user = auth.getUser();\n\n  // If it does and they are not logged in, send the user to \"/login\"\n  if (requiresAuth && !user) {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\n\nexport default router;\n"]}]}