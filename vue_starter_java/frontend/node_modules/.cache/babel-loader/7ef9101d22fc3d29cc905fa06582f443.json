{"remainingRequest":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/babel-loader/lib/index.js!/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/router.js","dependencies":[{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/router.js","mtime":1565880464605},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport auth from \"./auth\";\nimport Home from \"./views/Home.vue\";\nimport Login from \"./views/Login.vue\";\nimport Register from \"./views/Register.vue\";\nimport CreateEvent from \"./views/CreateEvent.vue\";\nimport RatingResults from \"./views/RatingResults.vue\";\nimport RateWhiskey from \"./views/RateWhiskey.vue\";\nimport EventDetailPage from \"./views/EventDetailPage.vue\";\nimport HomeLoggedIn from \"./views/HomeLoggedIn.vue\";\nimport ResetPassword from \"./views/ResetPassword.vue\";\nimport EventSurveyPage from \"./views/EventSurveyPage.vue\";\nVue.use(Router);\n/**\n * The Vue Router is used to \"direct\" the browser to render a specific view component\n * inside of App.vue depending on the URL.\n *\n * It also is used to detect whether or not a route requires the user to have first authenticated.\n * If the user has not yet authenticated (and needs to) they are redirected to /login\n * If they have (or don't need to) they're allowed to go about their way.\n */\n\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/login\",\n    name: \"login\",\n    component: Login,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/register\",\n    name: \"register\",\n    component: Register,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/createEvent\",\n    name: \"createEvent\",\n    component: CreateEvent,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/ratingResults/:eventId\",\n    name: \"ratingResults\",\n    component: RatingResults,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/ratewhiskey/:eventId\",\n    name: \"rateWhiskey\",\n    component: RateWhiskey,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/eventdetail/:eventId\",\n    name: \"eventDetailPage\",\n    component: EventDetailPage,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/home\",\n    name: \"homeLoggedIn\",\n    component: HomeLoggedIn,\n    meta: {\n      requiresAuth: true\n    }\n  }, //,\n  //{\n  //path: \"/logout\",\n  //name: \"logout\",\n  //component: Logout\n  //}\n  {\n    path: \"/resetPass\",\n    name: \"resetPassword\",\n    component: ResetPassword,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/eventSurvey/:eventId\",\n    name: \"eventSurveyPage\",\n    component: EventSurveyPage,\n    meta: {\n      requiresAuth: true\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  // Determine if the route requires Authentication\n  var requiresAuth = to.matched.some(function (x) {\n    return x.meta.requiresAuth;\n  });\n  var user = auth.getUser(); // If it does and they are not logged in, send the user to \"/login\"\n\n  if (requiresAuth && !user) {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["/Users/eford/Development/final-capstone-team-hotel/vue_starter_java/frontend/src/router.js"],"names":["Vue","Router","auth","Home","Login","Register","CreateEvent","RatingResults","RateWhiskey","EventDetailPage","HomeLoggedIn","ResetPassword","EventSurveyPage","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","x","user","getUser"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport auth from './auth'\nimport Home from './views/Home.vue'\nimport Login from './views/Login.vue'\nimport Register from './views/Register.vue'\nimport CreateEvent from './views/CreateEvent.vue'\nimport RatingResults from './views/RatingResults.vue'\nimport RateWhiskey from './views/RateWhiskey.vue'\nimport EventDetailPage from './views/EventDetailPage.vue'\nimport HomeLoggedIn from './views/HomeLoggedIn.vue'\nimport ResetPassword from './views/ResetPassword.vue'\nimport EventSurveyPage from './views/EventSurveyPage.vue'\n\nVue.use(Router)\n\n/**\n * The Vue Router is used to \"direct\" the browser to render a specific view component\n * inside of App.vue depending on the URL.\n *\n * It also is used to detect whether or not a route requires the user to have first authenticated.\n * If the user has not yet authenticated (and needs to) they are redirected to /login\n * If they have (or don't need to) they're allowed to go about their way.\n */\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/login\",\n      name: \"login\",\n      component: Login,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/register\",\n      name: \"register\",\n      component: Register,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/createEvent\",\n      name: \"createEvent\",\n      component: CreateEvent,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: \"/ratingResults/:eventId\",\n      name: \"ratingResults\",\n      component: RatingResults,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: \"/ratewhiskey/:eventId\",\n      name: \"rateWhiskey\",\n      component: RateWhiskey,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: \"/eventdetail/:eventId\",\n      name: \"eventDetailPage\",\n      component: EventDetailPage,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: \"/home\",\n      name: \"homeLoggedIn\",\n      component: HomeLoggedIn,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    //,\n    //{\n    //path: \"/logout\",\n    //name: \"logout\",\n    //component: Logout\n    //}\n\n    {\n      path: \"/resetPass\",\n      name: \"resetPassword\",\n      component: ResetPassword,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: \"/eventSurvey/:eventId\",\n      name: \"eventSurveyPage\",\n      component: EventSurveyPage,\n      meta: {\n        requiresAuth: true\n      }\n    }\n  ]\n})\n\nrouter.beforeEach((to, from, next) => {\n  // Determine if the route requires Authentication\n  const requiresAuth = to.matched.some(x => x.meta.requiresAuth);\n  const user = auth.getUser();\n\n  // If it does and they are not logged in, send the user to \"/login\"\n  if (requiresAuth && !user) {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\n\nexport default router;\n"]}]}